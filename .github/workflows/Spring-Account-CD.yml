name: Spring-Account CD

on:
  push:
    paths:
    - "account/**"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./account
    steps:
    - name : Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Set up JDK 11 job success
      if: ${{success()}}
      run: echo "JDK 11 job succeeded"

    - name: Setup Gradle's permission
      run: chmod +x gradlew
      working-directory: ${{ env.working-directory }}

    - name: Create application.yml
      run: |
        touch ./account/src/main/resources/application.yml
        echo "${{ secrets.SPRING_ACCOUNT_ENV }}" > ./account/src/main/resources/application.yml
      shell: bash

    - name: Gradle clean and Build  
      run: ./gradlew clean build
      working-directory: ${{ env.working-directory }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
       ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
       IMAGE_TAG: latest
      run: |
       cd file
       docker build -t ${{ secrets.FILE_ECR_REPOSITORY }} .
       docker tag ${{ secrets.FILE_ECR_REPOSITORY }}:$IMAGE_TAG ${{ secrets.FILE_REPO_URL }}:$IMAGE_TAG
       docker push ${{ secrets.FILE_REPO_URL }}:$IMAGE_TAG
      
    - name: Spring-Account CD Success Discord Notification
      uses: sarisia/actions-status-discord@v1
      if: ${{ success() }}
      with:
        title: ✅ Spring-Account CD success ✅
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        color: 00FF00

    - name: Spring-Account CD Failed Discord Notification
      uses: sarisia/actions-status-discord@v1
      if: ${{ failure() }}
      with:
        title: ❗️ Spring-Account CD failed ❗️
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        color: FF0000
